package org.example.org.example.lessons.lesson12.homework

fun main() {

//Задачи на приведение коллекции к значению


//Проверить, что размер коллекции больше 5 элементов.
    val a1 = listOf(1, 2, -3, 4, -6, 6, 7, 6, -9, 10, 27, 19)
    val a1Size = a1.size
    if (a1.size > 5) {
        println("Размер коллекции больше 5 элементов")
    } else {
        println("Размер коллекции больше 5 элементов")
    }

//Проверить, что коллекция пустая
    if (a1.isEmpty()) {
        println("Коллекция пуста")
    } else {
        println("В коллекции ${a1.size} значений")
    }
//Проверить, что коллекция не пустая
    if (a1.isNotEmpty()) {
        println("В коллекции ${a1.size} значений")
    } else {
        println("Коллекция пуста")
    }

//Взять элемент по индексу или создать значение если индекса не существует
    val a2 = a1.getOrElse(18) {100}
    println(a2)

//Собрать коллекцию в строку
    val a3 = a1.joinToString(" , ")
    println(a3)

//Посчитать сумму всех значений
    val a4 = a1.sum()
    println(a4)

//Посчитать среднее
    val a5 = a1.average()
    println(a5)

//Взять максимальное число
    val a6 = a1.maxOrNull()
    println(a6)

//Взять минимальное число
    val a7 = a1.minOrNull()
    println(a7)

//Взять первое число или null
    val a8 = a1.firstOrNull()
    println(a8)
//Проверить что коллекция содержит элемент
    if (a1.contains(10)) {
        println("В коллекции что-то нашлось")
    } else {
        println("В коллекции ничего не нашлось")
    }


//Задачи на обработку коллекций

//Отфильтровать коллекцию по диапазону 18-30
    val a9 = a1.filter {
        it in 18..30
    }
    println(a9)

//Выбрать числа, которые не делятся на 2 и 3 одновременно
    val a10 = mutableListOf<Int>()
    a1.forEach {
        val notDivided = it % 2 == 0 && it % 3 == 0
        if (!notDivided) {
            a10.add(it)
        }
    }
    println(a10)

//Очистить текстовую коллекцию от null элементов
//Преобразовать текстовую коллекцию в коллекцию длин слов
//Преобразовать текстовую коллекцию в мапу, где ключи - перевёрнутые слова, а значения - длина слов
//Отсортировать список в алфавитном порядке
//Взять первые 3 элемента списка
//Распечатать квадраты элементов списка
//Группировать список по первой букве слов
//Очистить список от дублей
//Отсортировать список по убыванию
//Взять последние 3 элемента списка


//Реши задачи ниже в отдельных функциях.
//Задача 24. Характеристика числовой коллекции

//Напиши функцию, которая принимает коллекцию чисел и возвращает строку с характеристикой коллекции используя конструкцию when
//
//Если коллекция пустая - “Пусто”
//Если количество элементов меньше пяти - “Короткая”
//Если коллекция начинается с 0 - “Стартовая”
//Если сумма всех чисел больше 10000 - “Массивная”
//Если среднее значение равно 10 - “Сбалансированная”
//Если длина строки образованная склеиванием коллекции в строку равна 20 - “Клейкая”
//Если максимальное число меньше -10 - “Отрицательная”
//Если минимальное число больше 1000 - “Положительная”
//Если содержит одновременно числа 3 и 14 - “Пи***тая”
//Иначе - “Уникальная”
//Вызвать метод с данными, подходящими под каждую из веток

//Задача 25. Анализ учебных оценок
//Напиши функцию, которая принимает список чисел и возвращает список чисел.
//
//Пример данных: val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
//
//Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3. Вызывай методы обработки и фильтрации последовательно один из другого, чтобы результат предыдущего метода являлся основой для следующего.

//Задача 26. Создание каталога по первой букве
//Напиши функцию, которая принимает список строк и возвращает словарь с ключом - буквой и значением - строкой.
//
//Начальные значения: val list = listOf(
//"Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра", "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник", "Коврик", "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра", "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка", "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья", "посуда", "Настольная лампа", "торшер", "Этажерка"
//)
//
//Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве используя метод groupBy

//Задание 27. Подсчёт средней длины слов в списке
//Напиши функцию, которая принимает список строк и возвращает строку.
//
//Начальные значения взять из предыдущей задачи.
//
//Цель: Перевести все слова в количество букв, подсчитать среднее значение. Вернуть форматированный текст с двумя знаками после запятой, используя функцию format и подходящий шаблон.

//Задание 28: Категоризация чисел
//Напиши функцию, которая принимает список чисел и возвращает словарь с ключами - строками и значениями - числами.
//
//Начальные значения: val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
//
//Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности (“четные” и “нечетные”).

//Задание 29: Поиск первого подходящего элемента
//Напиши функцию, которая принимает список чисел и число и возвращает nullable число.
//
//Начальные значения: val ages = listOf(22, 18, 30, 45, 17, null, 60) и число для проверки возраста, например 18.
//
//Цель: Найти первый возраст в списке, который соответствует условию (больше второго аргумента) и вернуть его, либо null если значения не нашлось.

}