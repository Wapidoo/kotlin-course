package org.example.org.example.lessons.lesson9.homework

fun findSubstringInArray(array: Array<String>, searchString: String) {
    // Перебираем каждый элемент массива
    for (element in array) {
        // Проверяем, содержит ли элемент искомую строку
        if (element.contains(searchString)) {
            // Если содержит, печатаем элемент
            println("Найденный элемент: $element")
            return // Выходим из функции после первого найденного элемента
        }
    }
    // Если не нашли ни одного элемента, выводим сообщение
    println("Элемент не найден.")
}

fun findStringInSet(set: Set<String>, string: String) {
    var b: Boolean = false
    for (i in set) {
        if (i.contains(string)) {
            b = true
        }
    }
    println(b)
}

fun main() {


//Создайте массив из 5 целых чисел и инициализируйте его значениями от 1 до 5.
    val a1: Array<Int> = arrayOf(1, 2, 3, 4, 5)

//Создайте пустой массив строк размером 10 элементов.
    val a2: Array<String> = Array(10) { "" }

//Создайте массив из 5 элементов типа Double и заполните его значениями, являющимися удвоенным индексом элемента.
    val a3 = doubleArrayOf(1.0 * 2, 2.0 * 2, 3.0 * 2, 4.0 * 2, 5.0 * 2)

//Создайте массив из 5 элементов типа Int. Используйте цикл, чтобы присвоить каждому элементу значение, равное его индексу,
//умноженному на 3.

    val a4 = intArrayOf(1, 2, 3, 4, 5)
    for (i in a4.indices) {
        a4[i] = i * 3
    }

//Создайте массив из 3 nullable строк. Инициализируйте его одним null значением и двумя строками.
    val a5: Array<String?> = arrayOf(null, null, "ttt")

//Создайте массив целых чисел и скопируйте его в новый массив в цикле.
    val a6: Array<Int> = Array(5) { 1 }
    for (i in a6.indices) {
        a6[i] = a4[i]
    }

//Создайте два массива целых чисел одинаковой длины. Создайте третий массив, вычев значения одного из другого.
//Распечатайте полученные значения.

    val b1: Array<Int> = arrayOf(10, 9, 8, 7, 6)
    val b2: Array<Int> = arrayOf(8, 1, 2, 3, 3)

    val a7 = Array(b1.size) { 0 }
    for (i in a7.indices) {
        a7[i] = b1[i] - b2[i]
    }
    println(a7.joinToString(", "))


//Создайте массив целых чисел. Найдите индекс элемента со значением 5. Если значения 5 нет в массиве, печатаем -1.
//Реши задачу через цикл while.
    val a8: Array<Int> = arrayOf(10, 9, 8, 5, 6)
    var res1 = -1
    var count1 = 0
    while (count1 < a8.size) {
        if (a8[count1] == 5) {
            res1 = count1
            break
        }
        count1++
    }
    println(count1)

//Создайте массив целых чисел. Используйте цикл для перебора массива и вывода каждого элемента в консоль.
//Напротив каждого элемента должно быть написано “чётное” или “нечётное”.
    val a9: Array<Int> = arrayOf(10, 9, 8, 5, 6)
    for (i in a9.indices) {
        if (a9[i] % 2 == 0) {
            println("$i - чётное")
        } else println(("$i - нечётное"))
    }

//Создай функцию, которая принимает массив строк и строку для поиска. Функция должна находить в массиве элемент,
//в котором принятая строка является подстрокой (метод contains()). Распечатай найденный элемент.
    val strings = arrayOf("Привет, мир", "Добро пожаловать", "Kotlin - это классно")
    val searchString = "мир"

    findSubstringInArray(strings, searchString)


//LIST

//Создайте пустой неизменяемый список целых чисел.
    val a11: List<Int> = emptyList()

//Создайте неизменяемый список строк, содержащий три элемента (например, "Hello", "World", "Kotlin").
    val a12 = listOf("Hello", "World", "Kotlin")

//Создайте изменяемый список целых чисел и инициализируйте его значениями от 1 до 5.
    val a13 = mutableListOf(1, 2, 3, 4, 5)

//Имея изменяемый список целых чисел, добавьте в него новые элементы (например, 6, 7, 8).
    a13.addAll(mutableListOf(6,7,8))


//Имея изменяемый список строк, удалите из него определенный элемент (например, "World").
    val a14 = mutableListOf("Hello", "World", "How's it going")
    a14.remove("World")


//Создайте список целых чисел и используйте цикл для вывода каждого элемента на экран.
    val a15 = listOf(33, 22, 11, 44, 55)
    for(i in a15) {
        println("$i ")
    }


//Создайте список строк и получите из него второй элемент, используя его индекс.
    val a16 = listOf("Hello", "World", "How's it going")
    for(i in a16) {
        println(a16[1])
        break
    }


//Имея изменяемый список чисел, измените значение элемента на определенной позиции (например, замените элемент с
// индексом 2 на новое значение).
    val a17 = mutableListOf(3,4,5,6,7)
    a17[3] = 8
    println(a17.joinToString ( ))


//Создайте два списка строк и объедините их в один новый список, содержащий элементы обоих списков.
// Реши задачу с помощью циклов.
    val a18 = listOf("Раз", "Два", "Три")
    val a19 = listOf("Четыре", "Пять", "Шесть")
    val a20: MutableList<String> = mutableListOf()
    for (i in a18.indices) {
        a20.add(a18[i])
    }
    for (i in a19.indices) {
        a20.add(a19[i])
    }
    println(a20.joinToString ( ))


//Создайте список целых чисел и найдите в нем минимальный и максимальный элементы используя цикл.
    val a21 = listOf(33, 22, 11, 44, 55)
    var min = a21[0]
    var max = a21[0]
    for (i in a21) {
        if (min > i) {
            min = i
        }
        if (max < i) {
            max = i
        }
    }
    println("Минимальный элемент: $min")
    println("Максимальный элемент: $max")


//Имея список целых чисел, создайте новый список, содержащий только четные числа из исходного списка используя цикл.
    val a22 = listOf(33, 22, 11, 44, 55)
    val a23: MutableList<Int> = mutableListOf()
    for (i in a22) {
        if (i % 2 == 0) {
            a23.add(i)
        }
    }
    println(a23)

//Создайте пустое неизменяемое множество целых чисел.
    val a24: Set<Int> = emptySet()

//Создайте неизменяемое множество целых чисел, содержащее три различных элемента (например, 1, 2, 3).
    val a25: Set<Int> = setOf(1, 2, 3, 4, 5)

//Создайте изменяемое множество строк и инициализируйте его несколькими значениями (например, "Kotlin", "Java", "Scala").
    val a26: MutableSet<String> = mutableSetOf("Kotlin", "Java", "Scala")

//Имея изменяемое множество строк, добавьте в него новые элементы (например, "Swift", "Go").
    a26.addAll(mutableSetOf("Swift", "Go"))

//Имея изменяемое множество целых чисел, удалите из него определенный элемент (например, 2).
    val a27: MutableSet<Int> = mutableSetOf(1, 2, 3, 4, 5)
    a27.remove(2)

//Создайте множество целых чисел и используйте цикл для вывода каждого элемента на экран.
    for (i in a27) {
        println(i)
    }

//Создай функцию, которая принимает множество строк (set) и строку и проверяет, есть ли в множестве указанная строка.
// Нужно распечатать булево значение true если строка есть. Реши задачу через цикл.
    val set = setOf("Я", "устала", "печатать")
    val string = "думать"
    findStringInSet(set, string)


//Создайте неизменяемое множество строк и конвертируйте его в изменяемый список строк с использованием цикла.
    val a28 = setOf("Я", "устала", "печатать")
    val a29 = mutableListOf<String>()
    for (i in a28) {
        a29.add(i)
    }
    println(a29)
}